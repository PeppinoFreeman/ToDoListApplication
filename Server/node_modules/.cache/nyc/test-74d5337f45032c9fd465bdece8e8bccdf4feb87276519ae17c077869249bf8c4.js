const chai = require("chai");
const chaiHttp = require("chai-http");
const expect = chai.expect;
const request = require("supertest");
const server = require("../server").app;
const routes = require("../lib/routes").Routes;
const mongoose = require("mongoose");
chai.should();
chai.use(chaiHttp);

describe("", () => {
  beforeEach(() => {
    return mongoose.connect("mongodb://localhost/ToDoDatabase", {
      useNewUrlParser: true,
      useUnifiedTopology: true,
      useFindAndModify: false,
    });
  });
  it("Récupère la liste des catégories", (done) => {
    request(server)
      .get(routes.category)
      .end((err, res) => {
        res.should.have.status(200);
        res.body.should.be.a("array");
        done();
      });
  });

  it("Ajoute une catégorie", (done) => {
    request(server)
      .post(routes.category)
      .send({ category: "House" })
      .then((err, res) => {
        // res.should.have.status(200);
        console.log(res);
        res.body.shoud.();
        done();
      });
  });
});

/*
describe("Requests", () => {
    before(()=>{
     conn.mongoose.connection;  
    })

    after((done)=>{
        conn.close().then(()=>done()).catch((err)=>done(err));
    })

    it('post',(done)=>{
        request(server).post('/collection').send().then((res)=>{
            const body = res.body;
            console.log(body);
        });
    })
});
*/
